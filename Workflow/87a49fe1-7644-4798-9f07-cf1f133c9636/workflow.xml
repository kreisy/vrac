<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item2" object-name="workflow:name=generic" id="87a49fe1-7644-4798-9f07-cf1f133c9636" version="0.0.12" api-version="6.0.0" allowed-operations="evf" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Create a security group with Dynamic Membership]]></display-name>
  <description><![CDATA[Create a security group (empty)]]></description>
  <position y="50.0" x="100.0"/>
  <input>
    <param name="securityGroupName" type="string"/>
    <param name="securityTags" type="Array/string"/>
    <param name="operator" type="string"/>
    <param name="restHost" type="REST:RESTHost"/>
  </input>
  <output>
    <param name="securityGroupId" type="string"/>
  </output>
  <workflow-item name="item1" type="end" end-mode="0">
    <position y="45.40909090909091" x="384.5"/>
  </workflow-item>
  <workflow-item name="item2" out-name="item1" type="task">
    <display-name><![CDATA[Create security group with VMs]]></display-name>
    <script encoded="false"><![CDATA[var securityGroupXml = new XML("<securitygroup><name/><dynamicMemberDefinition><dynamicSet><operator/></dynamicSet></dynamicMemberDefinition></securitygroup>");
securityGroupXml.name = securityGroupName;
securityGroupXml.dynamicMemberDefinition.dynamicSet.operator="OR";

for each (var securityTag in securityTags) {
	var dynamicCriteriaXml = new XML("<dynamicCriteria></dynamicCriteria>");
	dynamicCriteriaXml.value = securityTag;
	dynamicCriteriaXml.operator = operator;
	dynamicCriteriaXml.key="VM.SECURITY_TAG";
	dynamicCriteriaXml.criteria="=";
	securityGroupXml.dynamicMemberDefinition.dynamicSet.appendChild(dynamicCriteriaXml);
}

System.log(securityGroupXml);
var request = restHost.createRequest("POST", "/api/2.0/services/securitygroup//bulk/globalroot-0",securityGroupXml.toString());
request.contentType = "application/xml";
System.log("Request URL: " + request.fullUrl);
var response = request.execute();

if(response.statusCode != 201) throw("Security Group NOT Created! : " + response.statusCode + "\n" + response.contentAsString);

securityGroupId = response.contentAsString;
System.log("Security Group " + securityGroupName + " with ID " + securityGroupId + "  created successfully");]]></script>
    <in-binding>
      <bind name="restHost" type="REST:RESTHost" export-name="restHost"/>
      <bind name="securityGroupName" type="string" export-name="securityGroupName"/>
      <bind name="securityTags" type="Array/string" export-name="securityTags"/>
      <bind name="operator" type="string" export-name="operator"/>
    </in-binding>
    <out-binding>
      <bind name="securityGroupId" type="string" export-name="securityGroupId"/>
    </out-binding>
    <position y="55.40909090909091" x="204.5"/>
  </workflow-item>
  <presentation>
    <p-param name="restHost">
      <desc><![CDATA[restHost]]></desc>
    </p-param>
    <p-param name="securityGroupName">
      <desc><![CDATA[securityGroupName]]></desc>
      <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
    </p-param>
    <p-param name="securityTags">
      <desc><![CDATA[securityTag]]></desc>
      <p-qual kind="ognl" name="genericEnumeration" type="Array/string"><![CDATA[GetAction("com.vmware.se.nsx.securityTag","getAllSecurityTags").call( #restHost )]]></p-qual>
    </p-param>
    <p-param name="operator">
      <desc><![CDATA[operator]]></desc>
      <p-qual kind="static" name="genericEnumeration" type="Array/string"><![CDATA[#{#string#and#;#string#or#}#]]></p-qual>
    </p-param>
  </presentation>
</workflow>