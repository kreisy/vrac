<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item2" object-name="workflow:name=generic" id="567a886b-a2e1-44c0-a390-c553036e8dfd" version="1.0.1" api-version="6.0.0" allowed-operations="evf" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Request a Iaas VM]]></display-name>
  <description><![CDATA[Sends a request for a catalog item.]]></description>
  <ref-types><![CDATA[>>(vCACCAFE:CatalogItem)]]></ref-types>
  <position y="50.0" x="100.0"/>
  <input>
    <param name="item" type="vCACCAFE:CatalogItem">
      <description><![CDATA[Catalog item]]></description>
    </param>
    <param name="vmInstances" type="number"/>
    <param name="leaseDurationDays" type="number"/>
    <param name="cpuCount" type="number"/>
    <param name="memorySize" type="number"/>
    <param name="storageSize" type="number"/>
    <param name="assignToUser" type="string"/>
    <param name="vmDescription" type="string"/>
    <param name="requestReason" type="string"/>
    <param name="requestDescription" type="string"/>
    <param name="customProperties" type="Array/CompositeType(name:string,value:string,isEncrypted:boolean,promptUser:boolean):CustomProperty"/>
    <param name="maxCost" type="number"/>
    <param name="minCost" type="number"/>
  </input>
  <output>
    <param name="request" type="vCACCAFE:CatalogItemRequest">
      <description><![CDATA[Request]]></description>
    </param>
  </output>
  <attrib name="properties" type="Properties" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
  </attrib>
  <workflow-item name="item0" type="end" end-mode="0">
    <position y="45.40909090909091" x="564.5"/>
  </workflow-item>
  <workflow-item name="item2" out-name="item1" type="task">
    <display-name><![CDATA[Scriptable task]]></display-name>
    <script encoded="false"><![CDATA[properties = new Properties();

//VM Properties
var totalStorageSize = storageSize;
for each (var customProperty in customProperties){
	putInProperties(properties, "provider-" + customProperty.name, customProperty.value);
	if(customProperties.name != null && customProperties.name.indexOf("VirtualMachine.Disk") > -1){
		totalStorageSize = totalStorageSize + new vCACCAFEIntegerLiteral(customProperty.value).getValue();
	}
}

	putInProperties(properties, "provider-Cafe.Shim.VirtualMachine.NumberOfInstances",  new vCACCAFEIntegerLiteral(vmInstances).getValue());
	putInProperties(properties, "provider-VirtualMachine.LeaseDays", new vCACCAFEIntegerLiteral(leaseDurationDays).getValue());
	putInProperties(properties, "provider-VirtualMachine.CPU.Count", new vCACCAFEIntegerLiteral(cpuCount).getValue());
	putInProperties(properties, "provider-VirtualMachine.Memory.Size", new vCACCAFEIntegerLiteral(memorySize).getValue());
	putInProperties(properties, "provider-VirtualMachine.Disk0.Size", new vCACCAFEIntegerLiteral(storageSize).getValue());
	putInProperties(properties, "provider-Cafe.Shim.VirtualMachine.TotalStorageSize",  new vCACCAFEDecimalLiteral(totalStorageSize).getValue());
	putInProperties(properties, "provider-Cafe.Shim.VirtualMachine.MaxCost", new vCACCAFEIntegerLiteral(maxCost).getValue());
	putInProperties(properties,"provider-Cafe.Shim.VirtualMachine.MinCost", new vCACCAFEIntegerLiteral(minCost).getValue());
	
function putInProperties(props, propKey, propValue){
	if(propKey != null && propValue == null){
		props.put(propKey,"");
	}else if(propKey != null && propValue != null){
		props.put(propKey,propValue);
	}
}]]></script>
    <in-binding>
      <bind name="vmInstances" type="number" export-name="vmInstances"/>
      <bind name="leaseDurationDays" type="number" export-name="leaseDurationDays"/>
      <bind name="cpuCount" type="number" export-name="cpuCount"/>
      <bind name="memorySize" type="number" export-name="memorySize"/>
      <bind name="storageSize" type="number" export-name="storageSize"/>
      <bind name="assignToUser" type="string" export-name="assignToUser"/>
      <bind name="vmDescription" type="string" export-name="vmDescription"/>
      <bind name="requestReason" type="string" export-name="requestReason"/>
      <bind name="requestDescription" type="string" export-name="requestDescription"/>
      <bind name="properties" type="Properties" export-name="properties"/>
      <bind name="customProperties" type="Array/CompositeType(name:string,value:string,isEncrypted:boolean,promptUser:boolean):CustomProperty" export-name="customProperties"/>
      <bind name="maxCost" type="number" export-name="maxCost"/>
      <bind name="minCost" type="number" export-name="minCost"/>
    </in-binding>
    <out-binding>
      <bind name="properties" type="Properties" export-name="properties"/>
    </out-binding>
    <position y="55.90909090909091" x="205.0"/>
  </workflow-item>
  <workflow-item name="item1" out-name="item0" type="task" script-module="com.vmware.library.vcaccafe.request/requestCatalogItem">
    <display-name><![CDATA[requestCatalogItem]]></display-name>
    <script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.library.vcaccafe.request").requestCatalogItem(item,inputs) ;]]></script>
    <in-binding>
      <bind name="item" type="vCACCAFE:CatalogItem" export-name="item">
        <description><![CDATA[Catalog item]]></description>
      </bind>
      <bind name="inputs" type="Properties" export-name="properties">
        <description><![CDATA[Input values]]></description>
      </bind>
    </in-binding>
    <out-binding>
      <bind name="actionResult" type="vCACCAFE:CatalogItemRequest" export-name="request"/>
    </out-binding>
    <description><![CDATA[Sends a request for a catalog item.]]></description>
    <position y="55.90909090909091" x="345.0"/>
  </workflow-item>
  <presentation>
    <p-param name="item">
      <desc><![CDATA[Catalog item]]></desc>
      <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
      <p-qual name="contextualParameter" type="void"><![CDATA[__NULL__]]></p-qual>
    </p-param>
    <p-param name="vmInstances">
      <desc><![CDATA[vmInstances]]></desc>
      <p-qual kind="static" name="numberFormat" type="String"><![CDATA[##]]></p-qual>
    </p-param>
    <p-param name="leaseDurationDays">
      <desc><![CDATA[leaseDurationDays]]></desc>
      <p-qual kind="static" name="numberFormat" type="String"><![CDATA[##]]></p-qual>
    </p-param>
    <p-param name="memorySize">
      <desc><![CDATA[memorySize]]></desc>
      <p-qual kind="static" name="numberFormat" type="String"><![CDATA[##]]></p-qual>
    </p-param>
    <p-param name="cpuCount">
      <desc><![CDATA[cpuCount]]></desc>
      <p-qual kind="static" name="numberFormat" type="String"><![CDATA[##]]></p-qual>
    </p-param>
    <p-param name="storageSize">
      <desc><![CDATA[storageSize]]></desc>
      <p-qual kind="static" name="numberFormat" type="String"><![CDATA[##]]></p-qual>
    </p-param>
    <p-param name="assignToUser">
      <desc><![CDATA[assignToUser]]></desc>
    </p-param>
    <p-param name="vmDescription">
      <desc><![CDATA[vmDescription]]></desc>
    </p-param>
    <p-param name="requestReason">
      <desc><![CDATA[requestReason]]></desc>
    </p-param>
    <p-param name="requestDescription">
      <desc><![CDATA[requestDescription]]></desc>
    </p-param>
    <p-param name="customProperties">
      <desc><![CDATA[customProperties]]></desc>
    </p-param>
    <p-param name="maxCost">
      <desc><![CDATA[maxCost]]></desc>
    </p-param>
    <p-param name="minCost">
      <desc><![CDATA[minCost]]></desc>
    </p-param>
  </presentation>
</workflow>