<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item1" object-name="workflow:name=generic" id="4371cfa9-d009-401c-89d8-957343a2d41e" version="0.0.4" api-version="6.0.0" allowed-operations="evf" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[PWC Disposing]]></display-name>
  <description><![CDATA[Workflow template to use for vCAC extensibility

Input parameters can be used using vCAC VM properties using the format ExternalWFStubs.[workflow stub name].[vCO input parameter name]. If using plug-in types you need to pass their unique vCO IDs.

Input parameters was tested successfully with : 
- string
- plug-in input types
- number
- boolean
]]></description>
  <position y="50.0" x="100.0"/>
  <input>
    <param name="vCACVm" type="vCAC:VirtualMachine">
      <description><![CDATA[vCAC virtual machine]]></description>
    </param>
    <param name="vCenterVm" type="VC:VirtualMachine">
      <description><![CDATA[VC virtual machine]]></description>
    </param>
    <param name="vCACVmProperties" type="Properties">
      <description><![CDATA[vCAC virtual machine properties]]></description>
    </param>
  </input>
  <attrib name="attrVMname" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="result" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="newOU" type="AD:OrganizationalUnit" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
  </attrib>
  <attrib name="ou" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
    <description><![CDATA[Department]]></description>
  </attrib>
  <attrib name="timer" type="Date" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
    <description><![CDATA[This timer item will wait until date and will continue workflow execution.]]></description>
  </attrib>
  <workflow-item name="item0" type="end" end-mode="0">
    <position y="45.40909090909091" x="904.5"/>
  </workflow-item>
  <workflow-item name="item1" out-name="item4" type="task">
    <display-name><![CDATA[Display inputs]]></display-name>
    <script encoded="false"><![CDATA[
System.log("Got vCAC virtual machine " + vCACVm.virtualMachineName);

//If you do not get a vApp or VM it is likely that it is not accessible at the stage of the vCAC process

if (vCenterVm != null) {
	System.log("Got vCloud VM " + vCenterVm.name);
}
				
//Displaying vCAC VM properties
if (vCACVmProperties != null) {
	var log = "";
	log += "vCAC VM properties :\n";
	var array = new Array();
	for each (var key in vCACVmProperties.keys) {
		array.push(key + " : " + vCACVmProperties.get(key));	
	}
	array.sort();
	
	for each (var line in array) {
		log += "\t" + line + "\n";
	}	
	System.log(log);	
}
var ou = vCACVmProperties.get("ExternalWFStubs.BuildingMachine.ou");
attrVMname = vCACVm.displayName;
var test = ActiveDirectory.search("OrganizationalUnit",ou);
for (i in test){
	System.log(test[i].name);
	if (test[i].name == ou) {
		result = "vorhanden";
		newOU = test[i];
		System.log(ou+" ist vorhanden");
	}
	else {
		System.log(ou+" nicht vorhanden");
	}
}
]]></script>
    <in-binding>
      <bind name="vCACVm" type="vCAC:VirtualMachine" export-name="vCACVm"/>
      <bind name="vCenterVm" type="VC:VirtualMachine" export-name="vCenterVm"/>
      <bind name="vCACVmProperties" type="Properties" export-name="vCACVmProperties"/>
    </in-binding>
    <out-binding>
      <bind name="attrVMname" type="string" export-name="attrVMname"/>
      <bind name="test" type="string" export-name="result"/>
      <bind name="result" type="string" export-name="result"/>
      <bind name="newOU" type="AD:OrganizationalUnit" export-name="newOU"/>
      <bind name="ou" type="string" export-name="ou"/>
      <bind name="timer" type="Date" export-name="timer"/>
    </out-binding>
    <position y="55.40909090909091" x="204.5"/>
  </workflow-item>
  <workflow-item name="item4" out-name="item3" type="condition" alt-out-name="item2" comparator="0">
    <display-name><![CDATA[Decision]]></display-name>
    <script encoded="false"><![CDATA[//Generated by the system, cannot be edited
return (result == "vorhanden") ;]]></script>
    <in-binding>
      <bind name="result" type="string" export-name="result"/>
    </in-binding>
    <condition name="result" type="string" comparator="0" label="null">vorhanden</condition>
    <position y="45.40909090909091" x="364.5"/>
  </workflow-item>
  <workflow-item name="item3" out-name="item2" type="link" linked-workflow-id="33c036d7-1573-48e2-92a1-3c97594ffa07">
    <display-name><![CDATA[Destroy an organizational unit and delete its subtree]]></display-name>
    <in-binding>
      <bind name="organizationalUnit" type="AD:OrganizationalUnit" export-name="newOU">
        <description><![CDATA[Organizational unit to destroy]]></description>
      </bind>
    </in-binding>
    <out-binding/>
    <description><![CDATA[Deletes an organizational unit from an Active Directory instance and all objects within the organizational unit subtree.]]></description>
    <position y="55.40909090909091" x="645.0"/>
  </workflow-item>
  <workflow-item name="item2" out-name="item0" type="task" launched-workflow-id="dee26b5b-036d-486c-ae6a-c80e95fcebd4">
    <display-name><![CDATA[PWC Delete Folder]]></display-name>
    <script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
var workflowToLaunch = Server.getWorkflowWithId("dee26b5b-036d-486c-ae6a-c80e95fcebd4");
if (workflowToLaunch == null) {
	throw "Workflow not found";
}

var workflowParameters = new Properties();
workflowParameters.put("ou",ou);
var wfToken = workflowToLaunch.execute(workflowParameters);]]></script>
    <in-binding>
      <bind name="ou" type="string" export-name="ou"/>
    </in-binding>
    <out-binding>
      <bind name="wfToken" type="WorkflowToken">
        <description><![CDATA[Workflow execution token]]></description>
      </bind>
    </out-binding>
    <description><![CDATA[Workflow template to use for vCAC extensibility

Input parameters can be used using vCAC VM properties using the format ExternalWFStubs.[workflow stub name].[vCO input parameter name]. If using plug-in types you need to pass their unique vCO IDs.

Input parameters was tested successfully with : 
- string
- plug-in input types
- number
- boolean
]]></description>
    <position y="119.04545454545453" x="645.0"/>
  </workflow-item>
  <presentation>
    <p-param name="vCACVm">
      <desc><![CDATA[vCACVm]]></desc>
    </p-param>
    <p-param name="vCenterVm">
      <desc><![CDATA[vCenterVm]]></desc>
    </p-param>
    <p-param name="vCACVmProperties">
      <desc><![CDATA[vCACVmProperties]]></desc>
    </p-param>
  </presentation>
</workflow>