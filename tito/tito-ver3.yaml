apiVersion: apps/v1
kind: Deployment
metadata:
  name: titofe-$${ID}
  labels:
    name: tito-fe
    version: "latest"
    app: tito
    tier: frontend
    stage: prod
    ID: $${DBIP}
spec:
  replicas: 1
  selector:
    matchLabels:
      type: tito-fe
      version: v1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: tito
        type: tito-fe
        version: v1
        tier: frontend
        ID: $${DBIP}
    spec:
      containers:
        - name: tito
          image: vmeoc/tito-fe:V1.9.4
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 80
          env:
          - name: TITO_VERSION
            value: V2
          - name: TITO_SQL_SERVICE_SERVICE_HOST
            value: $${DBIP}
          - name: PROXY_NAME
            value: wavefront-proxy.default.svc.cluster.local
          - name: PROXY_PORT
            value: "2878"
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace

---
apiVersion: v1
kind: Service
metadata:
  name: titofe-service-$${ID}
  labels:
    app: tito
    tier: frontend
    stage: prod
spec:
  ports:
  - name: http
    port: 80               # port expose par docker  (pas le port dans le container)
  selector:                # key/value, label permettant de definir le pod cible (doit etre danslabels du pod)
    type: tito-fe
    tier: frontend
    ID: $${DBIP}
  type: LoadBalancer
